/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.13 model3.glb -t 
*/

import * as THREE from "three";
import React, { useEffect, useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";
import { useRecoilState } from "recoil";
import {
  AtomBumperColors,
  AtomTireWheelColors,
  AtomGearColors,
  AtomWireFrmae,
} from "../atoms/atoms";
import { useFrame, useThree } from "@react-three/fiber";

type GLTFResult = GLTF & {
  nodes: {
    boot_0: THREE.Mesh;
    boot001_0: THREE.Mesh;
    boot002_0: THREE.Mesh;
    boot003_0: THREE.Mesh;
    boot004_0: THREE.Mesh;
    boot005_0: THREE.Mesh;
    boot006_0: THREE.Mesh;
    boot007_0: THREE.Mesh;
    boot008_0: THREE.Mesh;
    boot009_0: THREE.Mesh;
    boot010_0: THREE.Mesh;
    boot011_0: THREE.Mesh;
    boot011_0001: THREE.Mesh;
    bumper_front001_0: THREE.Mesh;
    bumper_front001_1: THREE.Mesh;
    bumper_front001_2: THREE.Mesh;
    bumper_front003_0: THREE.Mesh;
    bumper_front003_1: THREE.Mesh;
    bumper_front004_0: THREE.Mesh;
    bumper_front004_1: THREE.Mesh;
    bumper_front004_2: THREE.Mesh;
    bumper_front007_0: THREE.Mesh;
    bumper_front009_0: THREE.Mesh;
    Cube001_0: THREE.Mesh;
    Cube002_0: THREE.Mesh;
    Cylinder000_0: THREE.Mesh;
    Cylinder000_1: THREE.Mesh;
    Cylinder000_2: THREE.Mesh;
    Cylinder000_3: THREE.Mesh;
    Cylinder001_0: THREE.Mesh;
    Cylinder001_1: THREE.Mesh;
    Cylinder001_2: THREE.Mesh;
    Cylinder001_3: THREE.Mesh;
    Plane_0: THREE.Mesh;
    Plane001_0: THREE.Mesh;
    Plane002_0: THREE.Mesh;
    Plane003_0: THREE.Mesh;
    Plane004_0: THREE.Mesh;
    Plane005_0: THREE.Mesh;
    Plane006_0: THREE.Mesh;
    underbody_0: THREE.Mesh;
    window_rear_0: THREE.Mesh;
    window_rear001_0: THREE.Mesh;
    windshield_0: THREE.Mesh;
    windshield_1: THREE.Mesh;
  };
  materials: {
    ["full_black.001"]: THREE.MeshStandardMaterial;
    ["paint.001"]: THREE.MeshStandardMaterial;
    ["tex_shiny.001"]: THREE.MeshPhysicalMaterial;
    ["window.001"]: THREE.MeshPhysicalMaterial;
    ["logo.001"]: THREE.MeshStandardMaterial;
    ["silver.001"]: THREE.MeshPhysicalMaterial;
    ["plastic.001"]: THREE.MeshStandardMaterial;
    ["coat.001"]: THREE.MeshStandardMaterial;
    ["lights.001"]: THREE.MeshStandardMaterial;
    ["glass.001"]: THREE.MeshPhysicalMaterial;
    ["rubber.001"]: THREE.MeshStandardMaterial;
    ["Material.002"]: THREE.MeshPhysicalMaterial;
    ["Material.003"]: THREE.MeshStandardMaterial;
    ["license.001"]: THREE.MeshStandardMaterial;
  };
};

type ContextType = Record<
  string,
  React.ForwardRefExoticComponent<JSX.IntrinsicElements["mesh"]>
>;

export function Model(props: JSX.IntrinsicElements["group"]) {
  const { nodes, materials } = useGLTF("/model.glb") as GLTFResult;

  const [bumperColors, setBumperColors] = useRecoilState(AtomBumperColors);
  const [gearColors, setGearColors] = useRecoilState(AtomGearColors);
  const [wireFrame, setWireFrame] = useRecoilState(AtomWireFrmae);
  const [tireWheelColors, setTireWheelColorss] =
    useRecoilState(AtomTireWheelColors);
  const { scene } = useThree();

  useEffect(() => {
    scene.traverse((obj) => {
      if (obj.name === "mesh") {
        obj.traverse((item) => {
          if (item instanceof THREE.Mesh) {
            item.material.wireframe = wireFrame;
          }
        });
      }
    });
  }, [wireFrame]);

  return (
    <group {...props} dispose={null} name="mesh" castShadow receiveShadow>
      <group
        position={[0, -0.009, 0.063]}
        rotation={[-Math.PI / 2, 0, 0]}
        scale={0.578}
      >
        <group position={[0, 0, 0.029]}>
          <mesh
            geometry={nodes.Cylinder000_0.geometry}
            material={materials["silver.001"]}
          >
            {tireWheelColors !== "base" && (
              <meshPhysicalMaterial
                metalness={0.5}
                roughness={0.3}
                ior={1.5}
                color={new THREE.Color(tireWheelColors)}
              />
            )}
          </mesh>
          <mesh
            geometry={nodes.Cylinder000_1.geometry}
            material={materials["plastic.001"]}
          />
          <mesh
            geometry={nodes.Cylinder000_2.geometry}
            material={materials["rubber.001"]}
          />
          <mesh
            geometry={nodes.Cylinder000_3.geometry}
            material={materials["Material.002"]}
          >
            {gearColors !== "base" && (
              <meshPhysicalMaterial
                metalness={0.5}
                roughness={0.3}
                ior={1.5}
                color={new THREE.Color(gearColors)}
              />
            )}
          </mesh>
        </group>
        <group position={[0, 0, 0.029]}>
          <mesh
            geometry={nodes.Cylinder001_0.geometry}
            material={materials["silver.001"]}
          >
            {tireWheelColors !== "base" && (
              <meshPhysicalMaterial
                metalness={0.5}
                roughness={0.3}
                ior={1.5}
                color={new THREE.Color(tireWheelColors)}
              />
            )}
          </mesh>
          <mesh
            geometry={nodes.Cylinder001_1.geometry}
            material={materials["plastic.001"]}
          />
          <mesh
            geometry={nodes.Cylinder001_2.geometry}
            material={materials["rubber.001"]}
          />
          <mesh
            geometry={nodes.Cylinder001_3.geometry}
            material={materials["Material.002"]}
          >
            {gearColors !== "base" && (
              <meshPhysicalMaterial
                metalness={0.5}
                roughness={0.3}
                ior={1.5}
                color={new THREE.Color(gearColors)}
              />
            )}
          </mesh>
        </group>
        <group position={[0, -0.003, 0.007]}>
          <mesh
            geometry={nodes.windshield_0.geometry}
            material={materials["window.001"]}
          />
          <mesh
            geometry={nodes.windshield_1.geometry}
            material={materials["plastic.001"]}
          />
        </group>
        <mesh
          geometry={nodes.boot_0.geometry}
          material={materials["full_black.001"]}
        />
        <mesh
          geometry={nodes.boot001_0.geometry}
          material={materials["paint.001"]}
        />
        <mesh
          geometry={nodes.boot002_0.geometry}
          material={materials["paint.001"]}
        />
        <mesh
          geometry={nodes.boot003_0.geometry}
          material={materials["tex_shiny.001"]}
          position={[0, 0.003, 0]}
        />
        <mesh
          geometry={nodes.boot004_0.geometry}
          material={materials["window.001"]}
        />
        <mesh
          geometry={nodes.boot005_0.geometry}
          material={materials["paint.001"]}
        />
        <mesh
          geometry={nodes.boot006_0.geometry}
          material={materials["full_black.001"]}
        />

        <mesh
          geometry={nodes.boot007_0.geometry}
          material={materials["logo.001"]}
          position-y="-0.02"
        />

        <mesh
          geometry={nodes.boot008_0.geometry}
          material={materials["paint.001"]}
        />
        <mesh
          geometry={nodes.boot009_0.geometry}
          material={materials["silver.001"]}
        />
        <mesh
          geometry={nodes.boot010_0.geometry}
          material={materials["plastic.001"]}
        />

        <mesh
          geometry={nodes.boot011_0.geometry}
          material={materials["coat.001"]}
        >
          {bumperColors !== "base" && (
            <meshPhysicalMaterial
              metalness={0.3}
              roughness={0.01}
              ior={1.5}
              color={new THREE.Color(bumperColors)}
            />
          )}
        </mesh>
        <mesh
          geometry={nodes.boot011_0001.geometry}
          material={materials["coat.001"]}
        >
          {bumperColors !== "base" && (
            <meshPhysicalMaterial
              metalness={0.3}
              roughness={0.01}
              ior={1.5}
              color={new THREE.Color(bumperColors)}
            />
          )}
        </mesh>
        <mesh
          geometry={nodes.bumper_front001_0.geometry}
          material={materials["plastic.001"]}
        />
        <mesh
          geometry={nodes.bumper_front001_1.geometry}
          material={materials["silver.001"]}
        />
        <mesh
          geometry={nodes.bumper_front001_2.geometry}
          material={materials["lights.001"]}
        />
        <mesh
          geometry={nodes.bumper_front003_0.geometry}
          material={materials["plastic.001"]}
        />
        <mesh
          geometry={nodes.bumper_front003_1.geometry}
          material={materials["glass.001"]}
        />
        <mesh
          geometry={nodes.bumper_front004_0.geometry}
          material={materials["silver.001"]}
        />
        <mesh
          geometry={nodes.bumper_front004_1.geometry}
          material={materials["lights.001"]}
        />
        <mesh
          geometry={nodes.bumper_front004_2.geometry}
          material={materials["plastic.001"]}
        />
        <mesh
          geometry={nodes.bumper_front007_0.geometry}
          material={materials["glass.001"]}
          rotation={[-0.006, 0, 0]}
          scale={1.036}
        />
        <mesh
          geometry={nodes.bumper_front009_0.geometry}
          material={materials["tex_shiny.001"]}
        />
        <mesh
          geometry={nodes.Cube001_0.geometry}
          material={materials["plastic.001"]}
          position={[0.036, -1.56, 0.333]}
          rotation={[0.709, -0.071, -0.245]}
          scale={[0.014, 0.014, 0.012]}
        />
        <mesh
          geometry={nodes.Cube002_0.geometry}
          material={materials["full_black.001"]}
          scale={[0.332, 0.318, 0.318]}
        />

        <mesh
          geometry={nodes.Plane001_0.geometry}
          material={materials["tex_shiny.001"]}
          position={[0.005, 3.581, 0.107]}
        />
        <mesh
          geometry={nodes.Plane002_0.geometry}
          material={materials["paint.001"]}
          position={[-1.053, 3.51, -0.126]}
          rotation={[-1.439, -0.62, 0.775]}
          scale={0.024}
        />
        <mesh
          geometry={nodes.Plane003_0.geometry}
          material={materials["paint.001"]}
          position={[0.436, 3.723, -0.117]}
          rotation={[-1.483, 0.105, 0.803]}
          scale={0.024}
        />
        <mesh
          geometry={nodes.Plane004_0.geometry}
          material={materials["paint.001"]}
          position={[-0.488, 3.684, -0.328]}
          rotation={[-1.415, -0.045, 0.802]}
          scale={0.059}
        />
        <mesh
          geometry={nodes.Plane005_0.geometry}
          material={materials["license.001"]}
          position={[0, 3.704, -0.292]}
          rotation={[0.114, 0, 0]}
          scale={[0.393, 0.393, 0.356]}
        />
        <mesh
          geometry={nodes.Plane006_0.geometry}
          material={materials["license.001"]}
          position={[0, -3.75, -0.432]}
          rotation={[0.082, 0, -Math.PI]}
          scale={[0.395, 0.395, 0.357]}
        />
        <mesh
          geometry={nodes.underbody_0.geometry}
          material={materials["full_black.001"]}
        >
          {bumperColors !== "base" && (
            <meshPhysicalMaterial
              metalness={0.3}
              roughness={0.01}
              ior={1.5}
              color={new THREE.Color(bumperColors)}
            />
          )}
        </mesh>
        <mesh
          geometry={nodes.window_rear_0.geometry}
          material={materials["window.001"]}
        />
        <mesh
          geometry={nodes.window_rear001_0.geometry}
          material={materials["full_black.001"]}
        />
      </group>
    </group>
  );
}

useGLTF.preload("/model.glb");
