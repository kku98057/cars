/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.13 model2.glb -t 
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    mesh_1_instance_0: THREE.Mesh
    mesh_1_instance_1: THREE.Mesh
    mesh_0: THREE.Mesh
    mesh_0_1: THREE.Mesh
    mesh_0_2: THREE.Mesh
    mesh_0_3: THREE.Mesh
    mesh_0_4: THREE.Mesh
    mesh_0_5: THREE.Mesh
    mesh_0_6: THREE.Mesh
    mesh_0_7: THREE.Mesh
    mesh_0_8: THREE.Mesh
    mesh_0_9: THREE.Mesh
    mesh_2: THREE.Mesh
    mesh_2_1: THREE.Mesh
    mesh_2_2: THREE.Mesh
  }
  materials: {
    ['930_plastics']: THREE.MeshStandardMaterial
    paint: THREE.MeshPhysicalMaterial
    ['930_chromes']: THREE.MeshStandardMaterial
    black: THREE.MeshStandardMaterial
    ['930_lights']: THREE.MeshStandardMaterial
    glass: THREE.MeshStandardMaterial
    ['930_stickers']: THREE.MeshStandardMaterial
    ['930_lights_refraction']: THREE.MeshStandardMaterial
    ['930_rim']: THREE.MeshStandardMaterial
    ['930_tire']: THREE.MeshStandardMaterial
    plate: THREE.MeshStandardMaterial
    DefaultMaterial: THREE.MeshStandardMaterial
    ['Material.001']: THREE.MeshStandardMaterial
  }
}

type ContextType = Record<string, React.ForwardRefExoticComponent<JSX.IntrinsicElements['mesh']>>

export function Model2(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/model2.glb') as GLTFResult
  return (
    <group {...props} dispose={null}>
      <group position={[0, -0.098, 0]} rotation={[-Math.PI / 2, 0, 0]} scale={0.812}>
        <group rotation={[Math.PI / 2, 0, 0]}>
          <group position={[0, 0.683, -2.621]} scale={[1, 0.96, 1]}>
            <mesh
              geometry={nodes.mesh_1_instance_0.geometry}
              material={materials['930_plastics']}
              position={[-7.966, -0.102, -7.966]}
              scale={0.001}
            />
          </group>
          <group position={[0, 0.468, 3.122]} rotation={[-2.834, 0, Math.PI]} scale={[1, 0.96, 1]}>
            <mesh
              geometry={nodes.mesh_1_instance_1.geometry}
              material={materials['930_plastics']}
              position={[-7.966, -0.102, -7.966]}
              scale={0.001}
            />
          </group>
        </group>
      </group>
      <group position={[-7.966, -0.102, -7.966]} scale={0.001}>
        <mesh geometry={nodes.mesh_0.geometry} material={materials.paint} />
        <mesh geometry={nodes.mesh_0_1.geometry} material={materials['930_chromes']} />
        <mesh geometry={nodes.mesh_0_2.geometry} material={materials.black} />
        <mesh geometry={nodes.mesh_0_3.geometry} material={materials['930_lights']} />
        <mesh geometry={nodes.mesh_0_4.geometry} material={materials.glass} />
        <mesh geometry={nodes.mesh_0_5.geometry} material={materials['930_stickers']} />
        <mesh geometry={nodes.mesh_0_6.geometry} material={materials['930_plastics']} />
        <mesh geometry={nodes.mesh_0_7.geometry} material={materials['930_lights_refraction']} />
        <mesh geometry={nodes.mesh_0_8.geometry} material={materials['930_rim']} />
        <mesh geometry={nodes.mesh_0_9.geometry} material={materials['930_tire']} />
      </group>
      <group position={[-7.966, -0.102, -7.966]} scale={0.001}>
        <mesh geometry={nodes.mesh_2.geometry} material={materials.plate} />
        <mesh geometry={nodes.mesh_2_1.geometry} material={materials.DefaultMaterial} />
        <mesh geometry={nodes.mesh_2_2.geometry} material={materials['Material.001']} />
      </group>
    </group>
  )
}

useGLTF.preload('/model2.glb')
